// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.hatimonline.code.roosec.domain;

import com.hatimonline.code.roosec.domain.SystemUserGroup;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect SystemUserGroupDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SystemUserGroupDataOnDemand: @Component;
    
    private Random SystemUserGroupDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<SystemUserGroup> SystemUserGroupDataOnDemand.data;
    
    public SystemUserGroup SystemUserGroupDataOnDemand.getNewTransientSystemUserGroup(int index) {
        com.hatimonline.code.roosec.domain.SystemUserGroup obj = new com.hatimonline.code.roosec.domain.SystemUserGroup();
        obj.setTimeCreated(new java.util.Date(new java.util.Date().getTime() - 10000000L));
        obj.setTimeLastModified(new java.util.Date(new java.util.Date().getTime() - 10000000L));
        obj.setUserWhoCreated(null);
        obj.setUserWhoLastModified(null);
        return obj;
    }
    
    public SystemUserGroup SystemUserGroupDataOnDemand.getSpecificSystemUserGroup(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        SystemUserGroup obj = data.get(index);
        return SystemUserGroup.findSystemUserGroup(obj.getId());
    }
    
    public SystemUserGroup SystemUserGroupDataOnDemand.getRandomSystemUserGroup() {
        init();
        SystemUserGroup obj = data.get(rnd.nextInt(data.size()));
        return SystemUserGroup.findSystemUserGroup(obj.getId());
    }
    
    public boolean SystemUserGroupDataOnDemand.modifySystemUserGroup(SystemUserGroup obj) {
        return false;
    }
    
    public void SystemUserGroupDataOnDemand.init() {
        data = com.hatimonline.code.roosec.domain.SystemUserGroup.findSystemUserGroupEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'SystemUserGroup' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.hatimonline.code.roosec.domain.SystemUserGroup>();
        for (int i = 0; i < 10; i++) {
            com.hatimonline.code.roosec.domain.SystemUserGroup obj = getNewTransientSystemUserGroup(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
