// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.hatimonline.code.roosec.domain;

import com.hatimonline.code.roosec.domain.SystemUser;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect SystemUserDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SystemUserDataOnDemand: @Component;
    
    private Random SystemUserDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<SystemUser> SystemUserDataOnDemand.data;
    
    public SystemUser SystemUserDataOnDemand.getNewTransientSystemUser(int index) {
        com.hatimonline.code.roosec.domain.SystemUser obj = new com.hatimonline.code.roosec.domain.SystemUser();
        obj.setTimeCreated(new java.util.Date(new java.util.Date().getTime() - 10000000L));
        obj.setTimeLastModified(new java.util.Date(new java.util.Date().getTime() - 10000000L));
        obj.setUserWhoCreated(null);
        obj.setUserWhoLastModified(null);
        java.lang.String username = "username_" + index;
        if (username.length() > 30) {
            username  = username.substring(0, 30);
        }
        obj.setUsername(username);
        return obj;
    }
    
    public SystemUser SystemUserDataOnDemand.getSpecificSystemUser(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        SystemUser obj = data.get(index);
        return SystemUser.findSystemUser(obj.getId());
    }
    
    public SystemUser SystemUserDataOnDemand.getRandomSystemUser() {
        init();
        SystemUser obj = data.get(rnd.nextInt(data.size()));
        return SystemUser.findSystemUser(obj.getId());
    }
    
    public boolean SystemUserDataOnDemand.modifySystemUser(SystemUser obj) {
        return false;
    }
    
    public void SystemUserDataOnDemand.init() {
        data = com.hatimonline.code.roosec.domain.SystemUser.findSystemUserEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'SystemUser' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.hatimonline.code.roosec.domain.SystemUser>();
        for (int i = 0; i < 10; i++) {
            com.hatimonline.code.roosec.domain.SystemUser obj = getNewTransientSystemUser(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
